# -*- coding: utf-8 -*-
#
# Orcoursetrion documentation build configuration file, created by
# sphinx-quickstart on Sun Feb 15 13:38:17 2015.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
# pylint: skip-file
from orcoursetrion import VERSION
import sphinx_bootstrap_theme

# -- General configuration ------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.coverage',
    'sphinx.ext.viewcode',
    'sphinxcontrib.napoleon',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Orcoursetrion'
copyright = u'2015, MIT Office of Digital Learning'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = VERSION
# The full version, including alpha/beta/rc tags.
release = VERSION

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'bootstrap'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'bootswatch_theme': 'cosmo',
}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# Output file base name for HTML help builder.
htmlhelp_basename = 'Orcoursetriondoc'


# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    ('index', 'Orcoursetrion.tex', u'Orcoursetrion Documentation',
     u'MIT Office of Digital Learning', 'manual'),
]

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'orcoursetrion', u'Orcoursetrion Documentation',
     [u'MIT Office of Digital Learning'], 1)
]

# If true, show URL addresses after external links.
man_show_urls = True


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        'index', 'Orcoursetrion', u'Orcoursetrion Documentation',
        u'MIT Office of Digital Learning', 'Orcoursetrion',
        'Automatic Course Provisioning.',
        'Miscellaneous'
    ),
]


# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = u'Orcoursetrion'
epub_author = u'MIT Office of Digital Learning'
epub_publisher = u'MIT Office of Digital Learning'
epub_copyright = u'2015, MIT Office of Digital Learning'

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

autoclass_content = 'both'

# -- Monkey-patch to hide 'non-local image warnings' -------------------
# The following explanation is taken from the source...
#
# ...I found this necessary because I want the sphinx-build -W to emit
# "warnings as errors" as part of my test & build infrastructure, to ensure
# that there are no mistakes in the documentation -- I know very well that
# I'm using nonlocal image URI's and I'm OK with that, but I don't want to
# ignore the other warnings.
#
# source: http://stackoverflow.com/a/28778969/875546
import sphinx.environment
from docutils.utils import get_source_line

def _warn_node(self, msg, node):
    if not msg.startswith('nonlocal image URI found:'):
        self._warnfunc(msg, '%s:%s' % get_source_line(node))

sphinx.environment.BuildEnvironment.warn_node = _warn_node
